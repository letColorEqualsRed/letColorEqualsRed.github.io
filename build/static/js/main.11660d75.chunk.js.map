{"version":3,"sources":["redux/ViewStory/reducers.ts","store.ts","pages/HomePage.tsx","pages/EditStoryPage.tsx","components/VisualNovel/VNBackgroundLayer.tsx","components/VisualNovel/CharacterSprite.tsx","components/VisualNovel/VNCharacterSpriteLayer.tsx","components/VisualNovel/AutoTextReader.tsx","components/VisualNovel/VNDialogLayer.tsx","components/VisualNovel/VNDialogOptionsLayer.tsx","components/VisualNovel/VisualNovelScene.tsx","components/StoryViewer.tsx","pages/ViewStoryPage.tsx","pages/SelectStoryPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","loadedStory","scenes","id","next","prev","type","background","backgroundSrc","dialog","displayMode","scrollSpeed","characterSprites","sprites","props","effects","spriteSrc","position","spriteCssClass","sound","loop","src","currentScene","history","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","viewStory","base","action","produce","draft","eventId","router","connectRouter","store","createStore","applyMiddleware","routerMiddleware","thunk","HomePage","className","to","EditStoryPage","BackgroundLayer","style","backgroundImage","backgroundSize","backgroundRepeat","getMediaSourceObject","CharacterSprite","spritePropsObject","spriteProps","CharacterSpriteLayer","map","sprite","AutoTextReader","useState","textContent","setTextContent","autoScrollTask","setAutoScrollTask","useEffect","a","ii","setInterval","length","oldTextContent","clearInterval","autoScrollText","onClick","DialogLayer","thisProps","DialogOptionsLayer","handlers","prevEvent","nextEvent","VisualNovelScene","viewProps","options","StoryViewFactory","ViewStoryPage","demoStory","useSelector","state","currentSceneIndex","setCurrentSceneIndex","demoScene","curr","SelectStoryPage","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11660d75.chunk.js","sourcesContent":["import produce from \"immer\";\r\nimport { ViewStoryActions } from \"./actions\";\r\nimport { IViewStoryState } from \"./state\";\r\n\r\n\r\n\r\n\r\n\r\nconst initialState: IViewStoryState = {\r\n    loadedStory: {\r\n        scenes: {\r\n            \"scene-01\": {\r\n                id: \"scene-01\",\r\n                next: \"scene-02\",\r\n                prev: null,\r\n                type: 'visual-novel-dialog',\r\n                background: {\r\n                    type: 'still-image',\r\n                    backgroundSrc: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpm1.narvii.com%2F6749%2Fca2cfbf1b2dd449ea6a76a88fca8d5eb2de6e9c3_00.jpg&f=1&nofb=1\"\r\n                },\r\n                dialog: {\r\n                    displayMode: \"toggled-on\",\r\n                    scrollSpeed: 1,\r\n                    dialog: \"Hi i is big pog visual novel dialog box\"\r\n                },\r\n                characterSprites: {\r\n                    sprites: [\r\n                        {\r\n                            props: {\r\n                                effects: \"\",\r\n                                spriteSrc: \"https://i.redd.it/tx187kf8wr301.png\",\r\n                                position: \"center\",\r\n                                spriteCssClass: \"\"\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                sound: {\r\n                    loop: false,\r\n                    src: \"\"\r\n                }\r\n            },\r\n            \"scene-02\": {\r\n                id: \"scene-02\",\r\n                next: \"scene-03\",\r\n                prev: \"scene-01\",\r\n                type: 'visual-novel-dialog',\r\n                background: {\r\n                    type: 'still-image',\r\n                    backgroundSrc: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpm1.narvii.com%2F6749%2Fca2cfbf1b2dd449ea6a76a88fca8d5eb2de6e9c3_00.jpg&f=1&nofb=1\"\r\n                },\r\n                dialog: {\r\n                    displayMode: \"toggled-on\",\r\n                    scrollSpeed: 1,\r\n                    dialog: \"i can auto read and stuff\"\r\n                },\r\n                characterSprites: {\r\n                    sprites: [\r\n                        {\r\n                            props: {\r\n                                effects: \"\",\r\n                                spriteSrc: \"https://i.redd.it/tx187kf8wr301.png\",\r\n                                position: \"center\",\r\n                                spriteCssClass: \"\"\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                sound: {\r\n                    loop: false,\r\n                    src: \"\"\r\n                }\r\n            },\r\n            \"scene-03\": {\r\n                id: \"scene-03\",\r\n                next: null,\r\n                prev: \"scene-02\",\r\n                type: 'visual-novel-dialog',\r\n                background: {\r\n                    type: 'still-image',\r\n                    backgroundSrc: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpm1.narvii.com%2F6749%2Fca2cfbf1b2dd449ea6a76a88fca8d5eb2de6e9c3_00.jpg&f=1&nofb=1\"\r\n                },\r\n                dialog: {\r\n                    displayMode: \"toggled-on\",\r\n                    scrollSpeed: 1,\r\n                    dialog: \"pls gib me gr8 art assets\"\r\n                },\r\n                characterSprites: {\r\n                    sprites: [\r\n                        {\r\n                            props: {\r\n                                effects: \"\",\r\n                                spriteSrc: \"https://i.redd.it/tx187kf8wr301.png\",\r\n                                position: \"center\",\r\n                                spriteCssClass: \"\"\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                sound: {\r\n                    loop: false,\r\n                    src: \"\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    currentScene: {\r\n        id: \"scene-01\",\r\n        prev: null,\r\n        next: \"scene-02\",\r\n        type: 'visual-novel-dialog',\r\n        background: {\r\n            type: 'still-image',\r\n            backgroundSrc: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpm1.narvii.com%2F6749%2Fca2cfbf1b2dd449ea6a76a88fca8d5eb2de6e9c3_00.jpg&f=1&nofb=1\"\r\n        },\r\n        dialog: {\r\n            displayMode: \"toggled-on\",\r\n            scrollSpeed: 1,\r\n            dialog: \"Hi i is big pog visual novel dialog box\"\r\n        },\r\n        characterSprites: {\r\n            sprites: [\r\n                {\r\n                    props: {\r\n                        effects: \"\",\r\n                        spriteSrc: \"https://i.redd.it/tx187kf8wr301.png\",\r\n                        position: \"center\",\r\n                        spriteCssClass: \"\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        sound: {\r\n            loop: false,\r\n            src: \"\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function viewStoryReducer(base: IViewStoryState = initialState, action: ViewStoryActions) {\r\n    switch (action.type) {\r\n        case \"@@viewStory/MOUNT_STORY_EVENT\":\r\n            return produce(base, (draft) => {\r\n                draft.currentScene = draft.loadedStory.scenes[action.eventId]\r\n            })\r\n    }\r\n    return base\r\n}","import { createStore, Action, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport {\r\n    RouterState,\r\n    connectRouter,\r\n    routerMiddleware,\r\n    CallHistoryMethodAction\r\n} from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport thunk,{ThunkDispatch as OldThunkDispatch} from 'redux-thunk';\r\nimport viewStoryReducer from './redux/ViewStory/reducers';\r\nimport { IViewStoryState } from './redux/ViewStory/state';\r\n\r\nexport type ThunkDispatch = OldThunkDispatch<IRootState, null, IRootAction>\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport interface IRootState {\r\n    viewStory: IViewStoryState,\r\n    router: RouterState\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\ntype IRootAction = CallHistoryMethodAction\r\nconst rootReducer = combineReducers<IRootState>({\r\n    viewStory: viewStoryReducer,\r\n    router: connectRouter(history)\r\n});\r\n\r\nlet store = createStore<IRootState, IRootAction, {}, {}>(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(routerMiddleware(history)),\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nexport default store","import React from 'react';\r\n\r\nimport \"../css/homepage.scss\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function HomePage() {\r\n\r\n\r\n    return (\r\n        <div className=\"page homepage\">\r\n            <div className=\"main-menu\">\r\n                <Link to='/story/select'>View saved stories</Link>\r\n                <button>Write a new story</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport default function EditStoryPage() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Edit a Story</h1>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport interface IVisualNovelBackgroundProps {\r\n    type: \"still-image\",\r\n    backgroundSrc: string,\r\n}\r\n\r\nexport default function BackgroundLayer(props: { props: IVisualNovelBackgroundProps }) {\r\n    let { backgroundSrc, type } = props.props\r\n\r\n    function getMediaSourceObject() {\r\n        switch(type) {\r\n            case \"still-image\":\r\n                return {\r\n                    backgroundImage: `url(\"${backgroundSrc}\")`,\r\n                    backgroundSize: \"cover\",\r\n                    backgroundRepeat: \"no-repeat\"\r\n                } \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { type === \"still-image\"\r\n                && <div className=\"scene-background\" style={ getMediaSourceObject() }> </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport interface ICharacterSpriteProps {\r\n    position?: string,\r\n    spriteSrc: string,\r\n    spriteCssClass?: string,\r\n    effects: string,\r\n}\r\n\r\nexport default function CharacterSprite(props: {\r\n    spriteProps: ICharacterSpriteProps\r\n}) {\r\n    const spriteProps = props.spriteProps;\r\n\r\n    function getMediaSourceObject(spritePropsObject: ICharacterSpriteProps ): React.CSSProperties {\r\n        return { \r\n            backgroundImage: `url(\"${spritePropsObject.spriteSrc}\")`,\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={getMediaSourceObject(spriteProps)}\r\n            className={`sprite ${spriteProps.position ? spriteProps.position : \"\"} ${spriteProps.spriteCssClass ? spriteProps.spriteCssClass : \"\"}`}>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport CharacterSprite, { ICharacterSpriteProps } from './CharacterSprite';\r\n\r\nexport interface IVisualNovelDialogCharacterSpritesProps {\r\n    sprites: {\r\n        props: ICharacterSpriteProps\r\n    }[]\r\n}\r\n\r\n\r\nexport default function CharacterSpriteLayer(props: { props: IVisualNovelDialogCharacterSpritesProps }) {\r\n    let { sprites } = props.props\r\n\r\n\r\n    return (\r\n        <div className=\"character-sprite-layer\">\r\n            { \r\n                sprites.map(sprite => <CharacterSprite spriteProps={sprite.props}/>) \r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport interface IAutoTextReaderProps {\r\n    dialog: string,\r\n    scrollSpeed: number\r\n}\r\n\r\n\r\nexport default function AutoTextReader(props: { props: IAutoTextReaderProps }) {\r\n    const { dialog, scrollSpeed } = props.props\r\n    let [textContent, setTextContent] = useState<string>(\"\");\r\n    let [autoScrollTask, setAutoScrollTask] = useState<any>(null);\r\n\r\n    function interruptAutoScroll() {\r\n        if (autoScrollTask) {\r\n            clearInterval(autoScrollTask);\r\n            setAutoScrollTask(null)\r\n        };\r\n        setTextContent(dialog)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function autoScrollText() {\r\n            let ii = 0;\r\n            setAutoScrollTask(\r\n                setInterval(() => {\r\n                    if (ii < dialog.length) {\r\n                        setTextContent((oldTextContent) => oldTextContent + dialog[ii])\r\n                        ii++\r\n                    } else {\r\n                        clearInterval(autoScrollTask)\r\n                        setAutoScrollTask(null)\r\n                    }\r\n                }, 20 * scrollSpeed)\r\n            )\r\n        }\r\n        autoScrollText()\r\n    }, [setTextContent])\r\n\r\n    return (\r\n        <span onClick={interruptAutoScroll} className='dialog-text'>{textContent}</span>\r\n    )\r\n}","import React from 'react';\r\nimport AutoTextReader from './AutoTextReader';\r\n\r\n\r\nexport interface IVisualNovelDialogProps {\r\n    dialog: string,\r\n    scrollSpeed: number,\r\n    displayMode: \"toggled-on\" | \"toggled-off\" | \"disabled\"\r\n}\r\n\r\nexport default function DialogLayer(props: { props: IVisualNovelDialogProps }) {\r\n    const thisProps = props.props\r\n\r\n    return (\r\n        <div className=\"dialog-box-container\">\r\n            <div className=\"dialog-box\">\r\n                <AutoTextReader props={{\r\n                    dialog: thisProps.dialog,\r\n                    scrollSpeed: thisProps.scrollSpeed\r\n                }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nimport \"../../css/visual-novel-dialog-view.scss\";\r\n\r\nexport interface IVisualNovelMenuProps {\r\n    handlers: {\r\n        nextEvent?: () => void,\r\n        prevEvent?: () => void\r\n    }\r\n}\r\n\r\nexport default function DialogOptionsLayer(props: { props: IVisualNovelMenuProps }) {\r\n    const thisProps = props.props;\r\n\r\n    return (\r\n        <div className=\"dialog-options-container\">\r\n            <div className=\"dialog-options\">\r\n                <span onClick={thisProps.handlers.prevEvent}>Previous</span>\r\n                <span onClick={thisProps.handlers.nextEvent}>Next</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport \"../../css/visual-novel-dialog-view.scss\";\n\nimport BackgroundLayer, { IVisualNovelBackgroundProps } from './VNBackgroundLayer';\nimport CharacterSpriteLayer, { IVisualNovelDialogCharacterSpritesProps } from './VNCharacterSpriteLayer';\nimport DialogLayer, { IVisualNovelDialogProps } from './VNDialogLayer';\nimport DialogOptionsLayer, { IVisualNovelMenuProps } from './VNDialogOptionsLayer';\n\nexport default function VisualNovelScene(props: {\n    viewProps: IVisualNovelSceneProps,\n    options: IVisualNovelMenuProps\n}) {\n    const { viewProps, options } = props;\n\n    return (\n        <div className=\"vn-dialog scene-wrapper\">\n            {/* <SoundLayer props={viewProps.sound} /> */}\n            <BackgroundLayer props={viewProps.background} />\n            <CharacterSpriteLayer props={viewProps.characterSprites} />\n            <DialogLayer props={viewProps.dialog} />\n            <DialogOptionsLayer props={options} />\n        </div>\n    )\n}\n\nexport interface IVisualNovelSceneProps {\n    id: string,\n    prev: string | null,\n    next: string | null,\n    type: \"visual-novel-dialog\",\n    sound: {\n        src: string,\n        loop: boolean\n    },\n    background: IVisualNovelBackgroundProps\n    characterSprites: IVisualNovelDialogCharacterSpritesProps,\n    dialog: IVisualNovelDialogProps\n}\n","import React from 'react';\r\n\r\nimport VisualNovelScene, { IVisualNovelSceneProps } from './VisualNovel/VisualNovelScene';\r\n\r\ntype StoryViewFactoryProps = IVisualNovelSceneProps;\r\n\r\nexport default function StoryViewFactory(props: any) {\r\n\r\n    return (\r\n        <>\r\n            { props.viewProps.type === \"visual-novel-dialog\" &&\r\n                <VisualNovelScene viewProps={props.viewProps} options={props.options} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport StoryViewFactory from '../components/StoryViewer';\r\nimport { IVisualNovelSceneProps } from '../components/VisualNovel/VisualNovelScene';\r\n\r\nimport \"../css/story-viewer.scss\";\r\nimport { IRootState } from '../store';\r\n\r\nexport default function ViewStoryPage() {\r\n    const demoStory = useSelector((state: IRootState) => state.viewStory.loadedStory);\r\n    let [currentSceneIndex, setCurrentSceneIndex] = useState<string | null>('scene-01');\r\n\r\n    let demoScene: IVisualNovelSceneProps | null = currentSceneIndex ? demoStory.scenes[currentSceneIndex] : null;\r\n\r\n    let options = {\r\n        handlers: {\r\n            nextEvent:\r\n                (demoScene && demoScene.next) ? () => {\r\n                    setCurrentSceneIndex((curr) => demoScene!.next)\r\n                } : null,\r\n            prevEvent:\r\n                (demoScene && demoScene.prev) ? () => {\r\n                    setCurrentSceneIndex((curr) => demoScene!.prev)\r\n                } : null\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>View A Story</h1>\r\n            <div className=\"story-viewer-container\">\r\n                {demoScene &&\r\n                    <div className=\"story-viewer\">\r\n                        <StoryViewFactory viewProps={demoScene} options={options} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SelectStoryPage() {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Select a Story</h1>\r\n            <Link to=\"/story/view\">Demo Story</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router-dom';\n\nimport store, { history } from './store';\n\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport EditStoryPage from './pages/EditStoryPage';\nimport ViewStoryPage from './pages/ViewStoryPage';\nimport SelectStoryPage from './pages/SelectStoryPage';\n\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <ConnectedRouter history = {history}>\n        <Switch>\n          <Route path=\"/story/edit\" component={EditStoryPage} />\n          <Route path=\"/story/view\" component={ViewStoryPage} />\n          <Route path=\"/story/select\" component={SelectStoryPage} />\n          <Route path=\"/\" component = {HomePage}/>\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}